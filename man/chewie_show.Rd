% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chewie-show.r
\name{chewie_show}
\alias{chewie_show}
\alias{chewie_show.sf}
\alias{chewie_show.chewie.find}
\title{Show an interactive map of a chewie_* object.}
\usage{
chewie_show(x, ...)

\method{chewie_show}{sf}(
  x,
  zcol = NULL,
  alpha = 0.8,
  border_alpha = 0.01,
  pal = "Plasma",
  pal_reverse = FALSE,
  aoi_color = "black",
  zoom = NULL,
  interactive = TRUE,
  file = tempfile(fileext = ".png"),
  ...
)

\method{chewie_show}{chewie.find}(
  x,
  time_group = c("year", "month"),
  alpha = 0.5,
  border_alpha = 0.5,
  pal = "Zissou 1",
  pal_reverse = FALSE,
  aoi_color = "black",
  zoom = NULL,
  interactive = TRUE,
  file = tempfile(fileext = ".png"),
  ...
)
}
\arguments{
\item{x}{object of class \code{chewie_find} or \code{chewie_grab}.}

\item{...}{additional arguments passed to \link[mapview]{mapview}.}

\item{zcol}{character; name of the column to use for coloring footprints.}

\item{alpha}{numeric; transparency of the granules or footprints.}

\item{border_alpha}{numeric; transparency of the granule/footprint borders.}

\item{pal}{character; name of the color palette to use for the granules/footprints.
see \code{hcl.pals()} for a list of available palettes.}

\item{pal_reverse}{logical; if \code{TRUE}, reverse the color palette.}

\item{aoi_color}{character; color of the AOI polygon.}

\item{zoom}{numeric; zoom level of the map. If \code{NULL} (default), the zoom
level is determined automatically by the extent of the GEDI granules.}

\item{interactive}{logical; if \code{TRUE} (default), return an interactive map.
If \code{FALSE}, return a static map.}

\item{file}{character; if \code{interactive = FALSE}, save the static map to this
file.}

\item{time_group}{character; if \code{interactive = TRUE}, group the granules by
this time unit. Must be one of \code{"year"} or \code{"month"}.}
}
\value{
interactive leaflet map if \code{interactive = TRUE}, otherwise the path
to the saved static map image.
}
\description{
Show an interactive map of a chewie_* object.
}
\details{
This function is a wrapper around \link[mapview]{mapview}. It is designed to
work with chewie.find objects generated with \link{find_gedi} and sf objects
returned by \link{collect_gedi}.
}
\examples{
\dontshow{if (interactive()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
prairie_creek <- sf::read_sf(system.file(
  "geojson", "prairie-creek.geojson",
  package = "chewie"
))

gedi_2a_search <- x <- find_gedi(prairie_creek,
  gedi_product = "2A",
  date_start = "2022-01-01",
  date_end = "2022-04-01"
)

chewie_show(gedi_2a_search, zoom = 8)
chewie_show(
  gedi_2a_search,
  zoom = 10,
  interactive = FALSE,
  file = tempfile(fileext = ".png")
)

gedi_2a_sf <- grab_gedi(gedi_2a_search) |>
  collect_gedi(gedi_find = gedi_2a_search)

chewie_show(
  gedi_2a_sf,
  zcol = "rh95",
  zoom = 13,
  alpha = 0.5,
)
\dontshow{\}) # examplesIf}
}
