[{"path":"https://permian-global-research.github.io/chewie/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://permian-global-research.github.io/chewie/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://permian-global-research.github.io/chewie/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://permian-global-research.github.io/chewie/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://permian-global-research.github.io/chewie/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://permian-global-research.github.io/chewie/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://permian-global-research.github.io/chewie/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://permian-global-research.github.io/chewie/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://permian-global-research.github.io/chewie/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://permian-global-research.github.io/chewie/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://permian-global-research.github.io/chewie/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://permian-global-research.github.io/chewie/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hugh Graham. Author, maintainer.","code":""},{"path":"https://permian-global-research.github.io/chewie/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Graham H (2024). chewie: package efficiently work GEDI data. R package version 0.1.0, https://permian-global-research.github.io/chewie/, https://github.com/Permian-Global-Research/chewie.","code":"@Manual{,   title = {chewie: A package to efficiently work with GEDI data},   author = {Hugh Graham},   year = {2024},   note = {R package version 0.1.0, https://permian-global-research.github.io/chewie/},   url = {https://github.com/Permian-Global-Research/chewie}, }"},{"path":"https://permian-global-research.github.io/chewie/index.html","id":"chewie","dir":"","previous_headings":"","what":"A package to efficiently work with GEDI data","title":"A package to efficiently work with GEDI data","text":"goal chewie make downloading GEDI data simple possible. includes point-level products: 1B, 2A, 2B 4A. quick summary design choices enables {chewie} achieve : Data downloaded converted parquet files can read using {arrow} converted sf objects. approach performant requires entire granule loaded memory (converted hdf5 parquet). can use dplyr verbs (base R) filter, mutate select data required without needing load shots, given granule, memory. system-level cache used store data. means file downloaded downloaded even working different project (also possible specify unique cache location project). support spatial filtering granules intersect area interest bounding box; frequently reduces amount irrelevant data downloaded.","code":""},{"path":"https://permian-global-research.github.io/chewie/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A package to efficiently work with GEDI data","text":"can install development version chewie like :","code":"# install.packages(\"pak\") pak::pkg_install(\"Permian-Global-Research/chewie\")"},{"path":"https://permian-global-research.github.io/chewie/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"A package to efficiently work with GEDI data","text":"First, let’s load libraries. {dplyr} isn’t essential recommended ’s excellent highly performative option working arrow datasets. useful helper functions set credentials (using chewie_creds()) check credentials cache set correctly (using chewie_health_check()). default cache set .chewie folder home directory. can change running chewie_cache_set(). Now, let’s search GEDI 2A data intersects Prairie Creek Redwoods State Park, California (dataset included package). plot footprints granules intersect area check ’ve got. Note default, find_gedi grab_gedi cache outputs , functions re-run, data loaded cache rather downloaded , even different R session. Whilst plot method chewie.find objects, great alternative plot leaflet map chewie_show, can static interactive (uses fantastic {mapview} hood).  Now use grab_gedi download data - function internally, converts data parquet format stores cache. returned value arrow_dplyr_query object. can use {dplyr} verbs filter/select data wish finally using collect_gedi convert data sf object. filtering/selection carried collect_gedi return available columns/rows AOI. Finally, can plot data. can use generic chewie_show function.","code":"library(chewie) library(dplyr) library(sf) chewie_creds() # to set up your credentials chewie_health_check() # to check your credentials and cache setup. prairie_creek <- sf::read_sf(system.file(   \"geojson\", \"prairie-creek.geojson\",   package = \"chewie\" ))  gedi_2a_search <- find_gedi(prairie_creek,   gedi_product = \"2A\",   date_start = \"2023-01-01\",   date_end = \"2023-01-31\" ) #> ✔ Using cached GEDI find result  print(gedi_2a_search) #>  #> ── chewie.find ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────── #> • GEDI-2A #>                     id          time_start            time_end                                                   url cached #>                 <char>              <POSc>              <POSc>                                                <char> <lgcl> #> 1: G2754665065-LPCLOUD 2023-01-25 05:14:31 2023-01-25 06:47:21 https://data.lpdaac.earthdatacloud.nasa.gov/lp-pro...   TRUE #> 1 variable(s) not shown: [geometry <sfc_POLYGON>] #>  #> ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── chewie_show(   gedi_2a_search,   zoom = 8 ) gedi_2a_sf <- grab_gedi(gedi_2a_search) |>   filter(     quality_flag == 1,     degrade_flag == 0   ) |>   select(     beam, date_time, lat_lowestmode, lon_lowestmode, elev_highestreturn,     elev_lowestmode, rh0, rh25, rh50, rh75, rh95, rh100   ) |>   collect_gedi(gedi_find = gedi_2a_search) #> ✔ All data found in cache  print(gedi_2a_sf) #> Simple feature collection with 884 features and 10 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -124.069 ymin: 41.3609 xmax: -123.9959 ymax: 41.43904 #> Geodetic CRS:  WGS 84 #> # A tibble: 884 × 11 #>     beam date_time           elev_highestreturn elev_lowestmode   rh0    rh25 #>  * <int> <dttm>                           <dbl>           <dbl> <dbl>   <dbl> #>  1     0 2023-01-25 06:09:05             -19.6           -23.8  -3.55 -1.12   #>  2     0 2023-01-25 06:09:05             -20.7           -24.2  -3.89 -1.27   #>  3     0 2023-01-25 06:09:05             -20.7           -24.2  -3.93 -1.27   #>  4     0 2023-01-25 06:09:05              -2.29          -23.3  -3.37 -0.0300 #>  5     0 2023-01-25 06:09:05              27.7           -15.0  -2.54  9.70   #>  6     0 2023-01-25 06:09:05              35.8             4.55 -3.74 12.1    #>  7     0 2023-01-25 06:09:05              55.9            12.2  -1.57 16.8    #>  8     0 2023-01-25 06:09:05              94.6            41.0  -1.53 25.8    #>  9     0 2023-01-25 06:09:05              95.3            42.5  -3.78  6.06   #> 10     0 2023-01-25 06:09:05              98.3            33.8  -2.32 29.9    #> # ℹ 874 more rows #> # ℹ 5 more variables: rh50 <dbl>, rh75 <dbl>, rh95 <dbl>, rh100 <dbl>, #> #   geometry <POINT [°]> chewie_show(   gedi_2a_sf,   zcol = \"rh95\",   zoom = 13,   alpha = 0.5,   aoi_color = \"white\" )"},{"path":"https://permian-global-research.github.io/chewie/index.html","id":"other-relevant-software","dir":"","previous_headings":"","what":"Other relevant software","title":"A package to efficiently work with GEDI data","text":"gedi-subsetter provides selection python tools querying downloading GEDI data. scope similar {chewie} also provides direct access hdf5 files nasa affiliates access MAAP platform. {rGEDI} provides ability download GEDI data also great deal additional functionality visualisation, post-processing modelling. {GEDI4R} similarly provides suit tools downloading, visualising modelling GEDI data, focus 4A product. pyGEDI Python package downloading visualising GEDI data. GEDI-Data-Resources collection scripts python R provide examples download process GEDI data. resources great source inspiration {chewie}; like thank authors great work!","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/chewie-cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage the {chewie} cache — chewie_setup_cache","title":"Manage the {chewie} cache — chewie_setup_cache","text":"Get path GEDI cache directory.","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/chewie-cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manage the {chewie} cache — chewie_setup_cache","text":"","code":"chewie_setup_cache(   .dir = chewie_default_dir(),   renviron = c(\"auto\", \"user\", \"project\"),   quiet = FALSE )  chewie_unset_cache(renviron = \"user\")  chewie_get_cache()  chewie_clear_find_cache()  chewie_clear_h5_temp_cache()  chewie_clear_parquet_cache(directories = c(\"none\", \"1B\", \"2A\", \"2B\", \"4A\"))"},{"path":"https://permian-global-research.github.io/chewie/reference/chewie-cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manage the {chewie} cache — chewie_setup_cache","text":".dir character path directory contain cache. renviron character either 'user', '\"project\"' path directory containing .Renviron file set CHEWIE_PARQUET_CACHE environment create directory. missing, default cache directory used. quiet logical TRUE messages printed. directories character; GEDI product parquet directories clear.","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/chewie-cache.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Manage the {chewie} cache — chewie_setup_cache","text":"chewie_unset_cache function remove CHEWIE_PARQUET_CACHE environment variable .Renviron file. chewie_clear_find_cache deletes cached .rds files GEDI find cache directory, located getOption(\"chewie.find.gedi.cache\"). chewie_clear_h5_temp_cache deletes cached .h5 files GEDI h5 - files sometimes persist download incomplete error download. trouble downloading data, running command well help. chewie_clear_parquet_cache deletes cached .parquet files GEDI parquet cache directory, located getOption(\"chewie.parquet.cache\"). function almost never used. Situations may useful might include - requiring free disk space, experiencing issues cache, package updates render existing cache irrelevant incompatible.","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/chewie-credentials.html","id":null,"dir":"Reference","previous_headings":"","what":"Set NASA Earthdata Credentials — chewie_creds","title":"Set NASA Earthdata Credentials — chewie_creds","text":"Set NASA Earthdata credentials use chewie functions.","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/chewie-credentials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set NASA Earthdata Credentials — chewie_creds","text":"","code":"chewie_creds(   netrc = NULL,   path = NULL,   force = FALSE,   usr = NULL,   pwd = NULL,   quiet = FALSE,   test = TRUE,   renviron = \"auto\" )  chewie_clean_netrc(renviron = \"auto\")  chewie_set_netrc_env(netrc, renviron = \"auto\")  chewie_get_netrc()"},{"path":"https://permian-global-research.github.io/chewie/reference/chewie-credentials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set NASA Earthdata Credentials — chewie_creds","text":"netrc character path existing .netrc file. path character path set create .netrc file force logical whether overwrite existing .netrc CHEWIE_NETRC environment variable. usr character NASA Earthdata username. pwd character NASA Earthdata password. quiet logical whether suppress registration prompt messaging. test logical whether test credentials setting . renviron character either \"auto\" \"user\", '\"project\"' path directory containing .Renviron file set CHEWIE_NETRC environment.","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/chewie-credentials.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set NASA Earthdata Credentials — chewie_creds","text":"NASA Earthdata API requires username password access data. provided via config settings form .netrc file. chewie_creds function can help generate file set location environment variable use chewie functions. theory need done , need change credentials can use force argument overwrite existing .netrc file. chewie_env_clean can used manually remove CHEWIE_NETRC environment delete associated .netrc file. chewie_set_netrc_env likely required can used manually set CHEWIE_NETRC environment variable used authenticating downloads NASA Earthdata API. chewie_get_netrc can used manually get CHEWIE_NETRC environment, providing file path .netrc file used authenticate requests NASA Earthdata API","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/chewie-find-gedi.html","id":null,"dir":"Reference","previous_headings":"","what":"Find GEDI granules — find_gedi","title":"Find GEDI granules — find_gedi","text":"Find GEDI granules intersect given spatial object.","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/chewie-find-gedi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find GEDI granules — find_gedi","text":"","code":"find_gedi(   x,   gedi_product = c(\"1B\", \"2A\", \"2B\", \"4A\"),   date_start = NULL,   date_end = NULL,   intersects = TRUE,   cache = TRUE )"},{"path":"https://permian-global-research.github.io/chewie/reference/chewie-find-gedi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find GEDI granules — find_gedi","text":"x object class sf, spatVector, spatRaster, sfc, stars, stars_proxy, numeric see details. Used define search area GEDI data. gedi_product character GEDI product search . date_start character POSIXct start date search GEDI data. NULL defaults start GEDI operations (2019-03-25). date_end character POSIXct end date search GEDI data. NULL defaults current date. intersects logical indicating whether return granules intersect given spatial object. FALSE granules contained within bounding box spatial object returned. cache logical indicating whether cache results GEDI search. TRUE results search cached directory defined : getOption(\"chewie.find.gedi.cache\"). FALSE results cached.","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/chewie-find-gedi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find GEDI granules — find_gedi","text":"x numeric must length 4 values corresponding bounding box coordinates order xmin, ymin, xmax, ymax. default, {sf} package uses s2 model carry geometric operations. can sometimes result apparent intersection GEDI granules AOI, possibly resulting downloading data expected. issue case, can use sf::sf_use_s2(use_s2 = FALSE). See sf_use_s2 details.","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/chewie-find-gedi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find GEDI granules — find_gedi","text":"","code":"if (FALSE) { # interactive()  humboldt <- sf::read_sf(   system.file(\"geojson\", \"humboldt.geojson\", package = \"chewie\") ) humboldt_find_2a <- find_gedi(humboldt,   gedi_product = \"2A\",   date_start = \"2022-01-01\",   date_end = \"2022-04-01\",   cache = FALSE ) print(humboldt_find_2a) }"},{"path":"https://permian-global-research.github.io/chewie/reference/chewie-package.html","id":null,"dir":"Reference","previous_headings":"","what":"chewie: A package for downloading GEDI data. — chewie-package","title":"chewie: A package for downloading GEDI data. — chewie-package","text":"gedi package provides set functions downloading carrying simple pre processing GEDI data. See list functions.","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/chewie-package.html","id":"managing-credentials-and-cache","dir":"Reference","previous_headings":"","what":"Managing Credentials and Cache","title":"chewie: A package for downloading GEDI data. — chewie-package","text":"chewie_creds Set manage NASA Earthdata credentials chewie_health_check Quick diagnostics health checks package cache credentials. chewie_setup_cache Set manage package cache. chewie_unset_cache Remove CHEWIE_PARQUET_CACHE environment variable .Renviron file. chewie_get_cache Get path GEDI cache directory. chewie_clear_find_cache Clear find gedi cache. chewie_clear_h5_temp_cache Clear h5 temp cache. chewie_clear_parquet_cache Clear parquet gedi cache.","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/chewie-package.html","id":"downloading-gedi-data","dir":"Reference","previous_headings":"","what":"Downloading GEDI Data","title":"chewie: A package for downloading GEDI data. — chewie-package","text":"find_gedi Find GEDI data given area given time period. grab_gedi Download GEDI data store cache.","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/chewie-package.html","id":"reading-gedi-data","dir":"Reference","previous_headings":"","what":"Reading GEDI Data","title":"chewie: A package for downloading GEDI data. — chewie-package","text":"collect_gedi Collect GEDI data data frame parquet files cache.","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/chewie-package.html","id":"visualising-gedi-data","dir":"Reference","previous_headings":"","what":"Visualising GEDI Data","title":"chewie: A package for downloading GEDI data. — chewie-package","text":"chewie_show Visualise GEDI data map.","code":""},{"path":[]},{"path":"https://permian-global-research.github.io/chewie/reference/chewie-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"chewie: A package for downloading GEDI data. — chewie-package","text":"Maintainer: Hugh Graham hugh.graham@permianglobal.com (ORCID)","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/chewie-print.html","id":null,"dir":"Reference","previous_headings":"","what":"print a chewie.find object — print.chewie.find","title":"print a chewie.find object — print.chewie.find","text":"print.chewie.find method printing chewie.find objects. Essentially wrapper print.data.table custom options. See details options.","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/chewie-print.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print a chewie.find object — print.chewie.find","text":"","code":"# S3 method for class 'chewie.find' print(x, ...)"},{"path":"https://permian-global-research.github.io/chewie/reference/chewie-print.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print a chewie.find object — print.chewie.find","text":"x chewie.find object print ... arguments passed data.table::print.data.table","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/chewie-print.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"print a chewie.find object — print.chewie.find","text":"Edit following options change default printing behaviour chewie.find objects: chewie.print.class, chewie.print.keys, chewie.print.topn, chewie.print.nrows, chewie.print.trunc.cols, chewie.prettyprint.char, chewie.print.width. Additonal options print.data.table can also set alter print layout.","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/chewie_health_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the status of {chewie} — chewie_health_check","title":"Check the status of {chewie} — chewie_health_check","text":"checks NASA Earthdata Credentials GEDI Cache environment variables","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/chewie_health_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the status of {chewie} — chewie_health_check","text":"","code":"chewie_health_check(.test = TRUE, .report_cache = TRUE)"},{"path":"https://permian-global-research.github.io/chewie/reference/chewie_health_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the status of {chewie} — chewie_health_check","text":".test logical; whether test credentials (requires internet connection) .report_cache logical; whether report cache status (default: TRUE)","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/chewie_show.html","id":null,"dir":"Reference","previous_headings":"","what":"Show an interactive map of a chewie_* object. — chewie_show","title":"Show an interactive map of a chewie_* object. — chewie_show","text":"Show interactive map chewie_* object.","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/chewie_show.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show an interactive map of a chewie_* object. — chewie_show","text":"","code":"chewie_show(x, ...)  # S3 method for class 'sf' chewie_show(   x,   zcol = NULL,   alpha = 0.8,   border_alpha = 0.01,   pal = \"Plasma\",   pal_reverse = FALSE,   aoi_color = \"black\",   zoom = NULL,   interactive = TRUE,   file = tempfile(fileext = \".png\"),   ... )  # S3 method for class 'chewie.find' chewie_show(   x,   time_group = c(\"year\", \"month\"),   alpha = 0.5,   border_alpha = 0.5,   pal = \"Zissou 1\",   pal_reverse = FALSE,   aoi_color = \"black\",   zoom = NULL,   interactive = TRUE,   file = tempfile(fileext = \".png\"),   ... )"},{"path":"https://permian-global-research.github.io/chewie/reference/chewie_show.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show an interactive map of a chewie_* object. — chewie_show","text":"x object class chewie_find chewie_grab. ... additional arguments passed mapview. zcol character; name column use coloring footprints. alpha numeric; transparency granules footprints. border_alpha numeric; transparency granule/footprint borders. pal character; name color palette use granules/footprints. see hcl.pals() list available palettes. pal_reverse logical; TRUE, reverse color palette. aoi_color character; color AOI polygon. zoom numeric; zoom level map. NULL (default), zoom level determined automatically extent GEDI granules. interactive logical; TRUE (default), return interactive map. FALSE, return static map. file character; interactive = FALSE, save static map file. time_group character; interactive = TRUE, group granules time unit. Must one \"year\" \"month\".","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/chewie_show.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show an interactive map of a chewie_* object. — chewie_show","text":"interactive leaflet map interactive = TRUE, otherwise path saved static map image.","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/chewie_show.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show an interactive map of a chewie_* object. — chewie_show","text":"function wrapper around mapview. designed work chewie.find objects generated find_gedi sf objects returned collect_gedi.","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/chewie_show.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show an interactive map of a chewie_* object. — chewie_show","text":"","code":"if (FALSE) { # interactive() prairie_creek <- sf::read_sf(system.file(   \"geojson\", \"prairie-creek.geojson\",   package = \"chewie\" ))  gedi_2a_search <- x <- find_gedi(prairie_creek,   gedi_product = \"2A\",   date_start = \"2022-01-01\",   date_end = \"2022-04-01\" )  chewie_show(gedi_2a_search, zoom = 8) chewie_show(   gedi_2a_search,   zoom = 10,   interactive = FALSE,   file = tempfile(fileext = \".png\") )  gedi_2a_sf <- grab_gedi(gedi_2a_search) |>   collect_gedi(gedi_find = gedi_2a_search)  chewie_show(   gedi_2a_sf,   zcol = \"rh95\",   zoom = 13,   alpha = 0.5, ) }"},{"path":"https://permian-global-research.github.io/chewie/reference/collect_gedi.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect GEDI data into an sf object — collect_gedi","title":"Collect GEDI data into an sf object — collect_gedi","text":"Collect GEDI data, returned grab_gedi, sf object.","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/collect_gedi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect GEDI data into an sf object — collect_gedi","text":"","code":"collect_gedi(   x,   gedi_find,   intersects = attributes(gedi_find)$intersects,   drop_xy_vars = TRUE )"},{"path":"https://permian-global-research.github.io/chewie/reference/collect_gedi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect GEDI data into an sf object — collect_gedi","text":"x arrow dataset object. gedi_find chewie.find object used obtain x. intersects logical; whether filter GEDI data based search extent attributed chewie.find object. Default use whatever specified chewie.find. drop_xy_vars logical; whether drop columns used create geometry column. Default TRUE.","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/collect_gedi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect GEDI data into an sf object — collect_gedi","text":"sf object","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/collect_gedi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Collect GEDI data into an sf object — collect_gedi","text":"function used collect GEDI data returned grab_gedi sf object. largely wrapper dplyr::collect converts sf filters gedi footprints based search extent attributed chewie.find object. strongly recomended make ability edit gedi data read using dplyr verbs collecting data. save lot time memory. However, make sure , selecting columns, remove lat_lowestmode lon_lowestmode columns required create geometry column.","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/collect_gedi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collect GEDI data into an sf object — collect_gedi","text":"","code":"if (FALSE) { # interactive() prairie_creek <- sf::read_sf(   system.file(\"geojson\", \"prairie-creek.geojson\", package = \"chewie\") ) prairie_creek_find_4a <- find_gedi(prairie_creek,   gedi_product = \"4A\",   date_start = \"2022-01-01\", date_end = \"2022-04-01\",   cache = FALSE )  prairie_creek_grab_4a <- grab_gedi(prairie_creek_find_4a)  prairie_creek_4a_sf <- collect_gedi(   prairie_creek_grab_4a,   prairie_creek_find_4a ) print(prairie_creek_4a_sf) }"},{"path":"https://permian-global-research.github.io/chewie/reference/extract_waveforms.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect waveform data from GEDI 1B data — extract_waveforms","title":"Collect waveform data from GEDI 1B data — extract_waveforms","text":"Collect waveform data GEDI 1B data","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/extract_waveforms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect waveform data from GEDI 1B data — extract_waveforms","text":"","code":"extract_waveforms(x)"},{"path":"https://permian-global-research.github.io/chewie/reference/extract_waveforms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect waveform data from GEDI 1B data — extract_waveforms","text":"x tibble data.frame object returned collect_gedi.","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/extract_waveforms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect waveform data from GEDI 1B data — extract_waveforms","text":"tibble containing waveform data.","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/extract_waveforms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Collect waveform data from GEDI 1B data — extract_waveforms","text":"function used collect waveform data GEDI 1B data returned collect_gedi. waveform amplitude converted float value precision 0.0001 (.e. 4 decimal places) elevation calculated elevation_bin0, elevation_lastbin rx_sample_count columns. function converts waveform lists footprint long form merges shots single tibble. advantage enables analysis comparison multiple plots. wish filter shots want analyse, simply filter results 'collect_gedi' passing function.","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/extract_waveforms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collect waveform data from GEDI 1B data — extract_waveforms","text":"","code":"if (FALSE) { # interactive() prairie_creek <- sf::read_sf(   system.file(\"geojson\", \"prairie-creek.geojson\", package = \"chewie\") ) prairie_creek_find_1b <- find_gedi(prairie_creek,   gedi_product = \"1B\",   date_start = \"2022-01-01\", date_end = \"2022-04-01\",   cache = FALSE )  prairie_creek_grab_1b <- grab_gedi(prairie_creek_find_1b)  prairie_creek_1b_sf <- collect_gedi(   prairie_creek_grab_1b,   prairie_creek_find_1b )  prairie_creek_waveforms <- collect_waveforms(prairie_creek_1b_sf) print(prairie_creek_waveforms) }"},{"path":"https://permian-global-research.github.io/chewie/reference/grab_gedi.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and load GEDI data from the Cloud or local cache — grab_gedi","title":"Download and load GEDI data from the Cloud or local cache — grab_gedi","text":"Download GEDI data NASA Earthdata hdf5 format, convert parquet format load arrow dataset.","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/grab_gedi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and load GEDI data from the Cloud or local cache — grab_gedi","text":"","code":"grab_gedi(   x,   progress = TRUE,   timeout = 7200,   batchsize = 10,   delete_h5 = TRUE,   compression = getOption(\"chewie.parquet.codec\") )"},{"path":"https://permian-global-research.github.io/chewie/reference/grab_gedi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and load GEDI data from the Cloud or local cache — grab_gedi","text":"x chewie.find.x object. dataset. See details. progress logical indicating whether show progress bar. timeout numeric indicating timeout seconds. batchsize numeric indicating number files download parallel. batchsize less number files download, files downloaded chunks batchsize. delete_h5 logical indicating whether delete hdf5 file conversion parquet. Default TRUE. files saved getOption(\"chewie.h5.cache\"). compression character vector indicating compression codec use. Default getOption(\"chewie.parquet.codec\"). see ?arrow::write_parquet. must one : \"zstd\", \"brotli\", \"gzip\", \"snappy\", \"bz2\", \"lz4\", \"lzo\" \"uncompressed\".","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/grab_gedi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and load GEDI data from the Cloud or local cache — grab_gedi","text":"arrow_dplyr_query object.","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/grab_gedi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download and load GEDI data from the Cloud or local cache — grab_gedi","text":"function main handler gedi data - checks cache see required GEDI data already downloaded, , downloads NASA Earthdata cloud. downloaded file converted parquet format saved cache directory. saves huge amount disk space enables dynamic reading filtering returned \"open\" arrow dataset. {chewie} cache specific variables made available GEDI hdf5 files. part reduce disk space also improve performance make working data simpler. require additional variables cached, please raise issue {chewie} GitHub repository.","code":""},{"path":[]},{"path":"https://permian-global-research.github.io/chewie/reference/grab_gedi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and load GEDI data from the Cloud or local cache — grab_gedi","text":"","code":"if (FALSE) { # interactive() prairie_creek <- sf::read_sf(   system.file(\"geojson\", \"prairie-creek.geojson\", package = \"chewie\") ) prairie_creek_find_2b <- find_gedi(prairie_creek,   gedi_product = \"2B\",   date_start = \"2022-01-01\", date_end = \"2022-04-01\",   cache = FALSE )  prairie_creek_grab_2b <- grab_gedi(   prairie_creek_find_2b ) }"},{"path":"https://permian-global-research.github.io/chewie/reference/plot.chewie.find.html","id":null,"dir":"Reference","previous_headings":"","what":"plot a chewie.find object — plot.chewie.find","title":"plot a chewie.find object — plot.chewie.find","text":"plot.chewie.find method plotting chewie.find objects.","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/plot.chewie.find.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot a chewie.find object — plot.chewie.find","text":"","code":"# S3 method for class 'chewie.find' plot(x, swath_col = \"#903ca586\", aoi_col = \"#cecece\", ...)"},{"path":"https://permian-global-research.github.io/chewie/reference/plot.chewie.find.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot a chewie.find object — plot.chewie.find","text":"x chewie.find object print swath_col character; color granules. aoi_col character; color aoi. ... arguments passed print.sf","code":""},{"path":"https://permian-global-research.github.io/chewie/reference/plot.chewie.find.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot a chewie.find object — plot.chewie.find","text":"base R plot.","code":""}]
